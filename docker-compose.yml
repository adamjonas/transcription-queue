version: "3.8"
   
services:
  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_DB: 'testdb'
      POSTGRES_PASSWORD: '123'
    ports:
      - '5433:5432'
    expose:
      - "5433"
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - app-network
  
  api:
    build:
      context: ./api
    container_name: api
    volumes:
      - ./api:/src
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5433
      DB_USER: postgres
      DB_PASSWORD: 123
      DB_NAME: testdb
    networks:
      - app-network

  frontend:
    container_name: client
    build:
      context: ./frontend-next
      dockerfile: Dockerfile
    volumes:
      - ./src:/app/src
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - api
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email bob@chaincode.com --agree-tos --no-eff-email --force-renewal -d review.btctranscripts.com

volumes:
  db:
    driver: local
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/transcription-queue/dhparam/
      o: bind

networks:
  app-network:
    driver: bridge
