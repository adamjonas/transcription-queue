--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2 (Debian 15.2-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: enum_transcripts_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.enum_transcripts_status AS ENUM (
    'queued',
    'not queued',
    'requeued'
);


ALTER TYPE public.enum_transcripts_status OWNER TO postgres;

--
-- Name: enum_users_permissions; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.enum_users_permissions AS ENUM (
    'reviewer',
    'admin'
);


ALTER TYPE public.enum_users_permissions OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: reviews; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reviews (
    id integer NOT NULL,
    "claimedAt" timestamp with time zone,
    "submittedAt" timestamp with time zone,
    "mergedAt" timestamp with time zone,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    "userId" integer,
    "transcriptId" integer
);


ALTER TABLE public.reviews OWNER TO postgres;

--
-- Name: reviews_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.reviews_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.reviews_id_seq OWNER TO postgres;

--
-- Name: reviews_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.reviews_id_seq OWNED BY public.reviews.id;


--
-- Name: transcripts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.transcripts (
    id integer NOT NULL,
    content json,
    "originalContent" json,
    status public.enum_transcripts_status DEFAULT 'not queued'::public.enum_transcripts_status NOT NULL,
    "archivedAt" timestamp with time zone,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    "archivedBy" integer
);


ALTER TABLE public.transcripts OWNER TO postgres;

--
-- Name: transcripts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.transcripts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.transcripts_id_seq OWNER TO postgres;

--
-- Name: transcripts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.transcripts_id_seq OWNED BY public.transcripts.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    "githubUsername" character varying(255) NOT NULL,
    "authToken" character varying(255),
    permissions public.enum_users_permissions DEFAULT 'reviewer'::public.enum_users_permissions NOT NULL,
    "archivedAt" timestamp with time zone,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: reviews id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews ALTER COLUMN id SET DEFAULT nextval('public.reviews_id_seq'::regclass);


--
-- Name: transcripts id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transcripts ALTER COLUMN id SET DEFAULT nextval('public.transcripts_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Data for Name: reviews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reviews (id, "claimedAt", "submittedAt", "mergedAt", "createdAt", "updatedAt", "userId", "transcriptId") FROM stdin;
2	\N	\N	\N	2023-03-08 20:24:57.718+00	2023-03-08 20:24:57.718+00	1	\N
3	\N	\N	\N	2023-03-08 20:25:39.023+00	2023-03-08 20:25:39.023+00	1	\N
4	\N	\N	\N	2023-03-08 20:25:40.719+00	2023-03-08 20:25:40.719+00	1	\N
\.


--
-- Data for Name: transcripts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.transcripts (id, content, "originalContent", status, "archivedAt", "createdAt", "updatedAt", "archivedBy") FROM stdin;
6	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-08 20:33:17.693+00	2023-03-08 20:33:17.693+00	\N
1	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-03 14:30:19.71+00	2023-03-08 20:36:16.374+00	1
2	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-03 14:30:19.71+00	2023-03-08 20:38:09.214+00	2
3	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-03 14:30:19.71+00	2023-03-08 20:39:46.167+00	2
4	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-03 14:30:19.71+00	2023-03-08 20:39:54.029+00	2
5	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	{"title":"Activaci√≥n de Taproot y LOT=true vs LOT=false","transcript_by":"Michael Folkson","translation_by":"Blue Moon","categories":["podcast"],"tags":["taproot"],"date":"2021-02-26T00:00:00.000Z","speakers":["Sjors Provoost","Aaron van Wirdum"],"media":"https://www.youtube.com/watch?v=7ouVGgE75zg","body":" Welcome to the Jankoid podcast. I'm here with merch hi there. Today we're gonna jump into the temple and That's a pun if you didn't get it. Welcome to Jankoid decoded the temple The temple an area you are more than familiar with yeah a Nampool whispery in the call. Yeah, let's maybe start with what's the relationship between the Mimpool and fees? We often talk about the Mimpool, but there is no such thing as a global Mimpool Every full-known has its own Mimpool and the Mimpool is basically just the queue of transactions waiting to get Confred where Confred means included in a block. So by default Block template builders will just sort the waiting transactions by the highest effective fee rate Then pick from the top the juicier transaction the quicker gets confirmed now Especially in the last few months we've seen that there was a very large queues because we had a huge run up in the price I haven't checked but I think it's now about a hundred and twenty days that We haven't cleared the Mimpool maybe a hundred and ten and since 15th of December So Mimpools are limited and By default they are limited to 300 megabytes of De-serialized data So that includes all day overhead structure the previous U-tix O's maybe even the whole transaction that created U-tix O's and so forth So roughly at about 80 blocks worth of data the default of 300 megabyte gets exceeded and at that point a full node will automatically start Perching the lowest fee rate transactions data stop them and tell all their neighboring peers Hey, don't send me anything under this period. They they start raising up their min fee rate So the problem that gets introduced here is if a parent transaction is no longer in the Mimpool You cannot bump it because if you try to do a CPP and the pair doesn't there the child is gonna be invalid CFF just for the initiated child place for parent Some things that are being done in the context of that is that people are working on Package relay where you can send more than one transaction to appear as a package that they evaluate as a whole together Instead of looking at the parent and saying okay you're out and this child doesn't have a parent Okay, you're out to And maybe you can just talk a little bit more about the mechanics of how CPS fee actually works to get into a block You bid on block space transactions get serialized in an apartment Where inputs are fair we big outputs are smaller there's a little bit of a transaction header that includes like how many inputs there output there and Lock time inversion So we already found out that when miners build blocks days Sort transactions by the highest period so they first considered the transactions that paid the most set-touchies Per byte of serialized data. So what's the mechanic where the mechanics of CPS fee when you try to Get a transaction through sometimes they have a Firit that is to low for it to be considered quickly and you can reprioritize your transaction by Increasing its effective Firit now you cannot edit a transaction after you submitted it to the network because the Transaction itself is immutable But what you can do is you can spend one of their outputs of the transactions with a Another child transaction that has a very high fee and Now the child transaction can only be valid by the parent getting included in the block So miners will look at transaction packages actually they sort the weight list by the M sister fee rate of transactions not just by transactions in the singular So when you have a child that is super juicy it basically pays for the parent to get included at low as well So literally tell pace for parent got every parents dream to have their children pay for You said that when miners evaluate these Fee rates is that built in the Bitcoin core are they writing custom software for that Bitcoin core has a get black template corn which allows you to exactly do that just generate a black template But I believe that most miners are probably running custom code because for example They accept out of band payments to reprioritize transactions or they run their own wallet service on this side and always prioritize their own transactions or They might have some sort of other solver that optimizes block template building further So I think that I haven't looked at this in detail, but I think that at least they're not running default values because By default blocks created by Bitcoin core would leave a little space. I think about six kilo bytes and blocks are full if you look at them. So they must have at least treated a little bit and we're not when we say miners We're talking about pools. Yes, right so most miners as in the People running a six or whatever They just join our pool who does the coordination of the work and They basically the pool operator picks the block template that is being worked on and the miner just gets a separate workspace that they iterate over in order to try to fund the This problem sounds hard. Why is it hard to estimate periods? So block discovery is a random process think of like Decay of radio active isotopes What we do there is we can give you a half time It usually takes around this much of time for half of the atoms to Disappade But we can't tell you if we look at a single atom when it's actually gonna Disappade it might be immediately it might be at the half time it might take decades Right with blocks that's the same thing there in average coming in at I think about 9.7 minutes But when the next block is gonna be found is up to this random press on process Actually it is such that since there is no memory to the process It's every draw just has a chance to succeed at every point in time The next block is about 10 minutes away in the average. Yeah, it's really intuitive to think about that Right if even if you're 18 minutes into not finding a block the next block will be found in 10 minutes Yes, exactly you don't know when the next block is gonna be found So you don't know what transactions you will be competing against you might be competing against the transactions that I Translate in the man pool plus the transactions that get added in the next one minute You might be competing against the transactions in the man pool plus 10 minutes or plus 60 minutes Because about once a day There's a block that takes 60 minutes really you have this one shot to pick exactly the right view To slide in at the bottom of the block that you want to be in because if you don't slide in at the bottom of the block You're overpay and if you underestimate you're not gonna get confirmed in the time that you were aiming to be confident And so how do exchanges usually do this are they overpaying? Are they just estimating the the upper end? Maybe like who's paying those fees? Right, there's different scenarios some exchanges have different tiers like low-time preference and high-time preference or whatever and they treat those differently But generally most exchanges by now batch their withdrawals Which gives them a way to leverage their scale So if you're sending to 20 people every minute Making one transaction out of that is a lot cheaper than making 20 separate payments It's also much easier to manage your due-to-to-pull that way and And Then they just tend to very conservatively estimate their fees just Be in the next two blocks and maybe rather overpay slightly because it's so much less work To deal with all the customer compliance over step-transactions than to to pay like sure we're overpaying by 30% to be in the next block But it's not them that's overpaying Is they usually that gives passed on the customer? There's different models. I think in most actually the exchange pays But they take a flat fee for a withdraw or really yeah, so like it's time for a very long time for example I'd like I think a 90 cent 90 Euro cent flat restraw fee But then they'd bet every few minutes only you said that the member who hasn't really been empty for almost four months Yeah, that's correct. Is the ever gonna empty again as we go to the moon does the what happens to the man pool? Yeah, that's a great question. I think we'll eventually see a man pool empty again But there should probably be a long tail end to it emptying Because now in this for months a lot of the exchanges that usually would do consolidations to keep their you take so pool sized Manageable they haven't been able to get any of those through so when the fee rates go down now I think that we'll see more people put in their consolidation transactions had like three to five such as per bite And that I think we might not see an empty man pool for multiple months So even if the top fee rates get a lot more relaxed now Generally the competition to be in blocks seems to correlate with volatility and especially price rises when when the market Heats up and and people are more excited to trade There's more transaction volume on the network and Now we've seen in the past four weeks or so the price has been going more sideways There might have been even a small dips here and there and the top fee rates have come down On the on the weekends that's dropped first to seven set of sheet per bite then six and now last weekend Six was clear completely I don't think that getting a one set of super by transaction a true will be possible at any time soon But it'll be very possible to wait to the weekend to get a ten set of super by transactions Maybe from like a more met-of-you know the miners like this don't they like having high fees because One is revenue for them but also As we sort of zoom out we think about the decreasing block reward over time Don't we have to have a high fee environment in order for this this is the work under one hand You have to also consider that the exchange rate 10x in the last year So the same fee rates represent a 10x purchasing value in cost for Getting a sense to the same service a transaction into a block so while the fee rates are similar The cost of getting a transaction through has actually increased there miners do love it because I think he rates make about 17% or so of the block reward right now So I'm not sure yeah, that's that's a nice little tip right But there's definitely a concern that when we continue to reduce the blocks subsidy in the every four year having rewards schedule that eventually the system will have to subside just transaction fees and if the transaction fees are to low it will Basically not be Economic for miners to provide security to the bit-ten system so there's a good argument for not Increasing the block space To our degree where it's always gonna be empty if you want to do that you essentially have to Also switch to an endless block subsidy otherwise there is no economic incentive for miners to continue mining if there's Not enough fees unless unless your minimum fee rate at some point becomes So valuable that even at minimum fee rate any transactions are Some sort of sufficient revenue for miners to continue their business Maybe we can sort of circle back to what happens when transactions are elected from the mumpul and to talk about like what problems Like it introduced especially for fee bumping and and lightning channel closing right When a mumpul fills up as we said earlier the node will start dropping the lowest fee rate transactions And especially for people or services that use Unconfirmed inputs that can be a problem at times because you cannot Spend an input that is unknown to other nodes Right, so if all other nodes on a network have dropped a transaction Your polar option that spends the output from that drop transaction will not be able to relay on in that work So you Cannot only not spend your hands, but you can also not Repair or ties the prior transaction One thing that this solves basically is RBF because you can just rewrite a replaceable transaction and submit a transaction with a higher fee rate All right, so we went over CPSP can we go over our BS? Sure So dip one 25 introduces rules by which you are allowed to replace transactions You have to explicitly signal data transaction is replaceable and In that case before a transaction is confirmed the sender may issue an updated version of the transaction Which can completely change the outputs the only restriction is that it has to use one of the same inputs Otherwise it wouldn't be a replacement And wouldn't be so it has to be a conflicting transaction essentially and Additionally, it has to pay enough fees to replace the prior transaction and all the transactions that changed off of them In the mimpul so if you had like three transactions you have to pay more fees and the replacement than those three transactions together All right, so blast double spending It's over site. I do not like to term double spending in that context So the problem with that is a successful double spend means that Either you actually got two transactions that were in conflict confirmed Which could basically only happen if you have two competing blocks where one Block had a prior version and a second block had a netty and then the second block eventually becomes part of the best chain Or when you at least convince somebody that they had been paid But then actually managed to spend the funds somewhere else But here in this case are the f transactions are Explicitly labeling themselves as replaceable basically they're running around with a red lettered sign on front of their chest Do not trust me, right and most wallets are for just doesn't show your rb f transactions until they are confirmed Once confirmed in the blockchain they're exactly the same and same reliability as any other transaction But while tuing they are explicitly saying look, I could be replaced do not consider yourself paid So calling this a double spend is really just saying that well Somebody made extremely unreasonable assumptions about the reliability of a transaction that explicitly warned them that It's not reliable so I like conflicting transactions more in this context and maybe why do we need two ways to bump fees? Why do we need RBF and CPFB right so they have slightly different traders CPFP allows any recipient of a transaction to bump it Right that could be a recipient in the sense that the person that got paid or The sender if there was a change I'd put on the transaction it also doesn't change the tx ID because you're just training Advait transactions on it and it it takes more blocks this right because you now have to send a second transaction in order to Increase the effective fee rate of the first so more blocks this Easier to keep track off and more flexibility as in there's more parties than can interact with it RBF on the other hand allows you to completely replace the transaction Which means that it is more flexible But you potentially have to pay more fee use especially if somebody else changed off of your transaction already It changes the tx ID and a lot of wallets and services have been tracking payments by the tx ID Rather than looking at like what address got paid what the amount was or Whatever as in like treating the current addresses as in voices as they should be used they built a whole system around tx IDs so our BF transactions that They changed the inputs are outputs right otherwise they couldn't change the fees and that means that they have a new tx ID And it it is not trivial to keep proper track of that and to update your UX and UI to make that Easily accessible to your users right then also only the sender can run per transaction Think that because they have to reissue the updated variant of the transaction Given that it is a little more difficult to interact with our BF transactions a lot of services Only see them once they're confirmed once they're reliable so if you're trying to get a service To give you something very quickly You might want to choose to not do an RBS transaction the first place though that they can Reasonably assume oh this has a high enough fee read and we know the user We can trust them that they're sending us these three dollars actually and give them Existed it so I don't know what I thought it okay So we asked the question like what problems do does an employee eviction Cause for fee bumping and and also maybe the lightning Channel closing use case we talked a bit generically about how parent transactions being gone Staps you from being able to spend those unconfermed output But does this especially a problem in the context of lightning because when you close a lightning channel It's either the collaborative case where you have no problem because you can really go see it the closing transaction with your partner But where you really needed you're trying to unilatory close because your partner has Channel partner hasn't shown up in all then if you you have to fall back to the transaction that you had negotiated Sometime in the past when you last updated the commitment transaction So let's say that was in a low fee read time and now the fee read suffix loaded and you can't actually even Broadcast the commitment transaction to the network because it's too low fee read Now the problem is the parted that is closing the lightning channel under the LN penalty update mechanism their funds are actually locked with a csv So they can't do cp because The output is only spendable after the transaction is confirmed for multiple blocks So you can't obtain a transaction to a output that is not spendable while it's still in the income Especially for enlightening this introduces the volatility in the the block space martin introduces a headache because You can literally come into the situation where you can close your lightning channel due to the fee read So one approach I've heard about is to introduce anchor outputs Which are depending on the proposal either spendable by either side or spendable on certain conditions But they immediately spendable so they can be cp of peat or Another idea is to have package relay right because if the Channel closing transaction has a low fee read and you can then relay it together with a second transaction That'll work except if you're in the naturally closing because the csv issue still Pretends to that but either way if you get package relay you would be able to do away with the the estimate and Commitment transactions altogether because we talked about how fee estimation is hard for regular transactions The estimation for a commitment transactions is even much harder because you have no clue when you will want to use the transaction Yeah, that depends if they seem Very scary right you you have absolutely no clue what the fee rates will be like when when you actually try to use it So having Packetry lay would in combination with anchor outputs would allow you to always have a zero fee on the commitment transaction And then basically always bring your own fee when you broadcast it in the Cp P P Touch Transaction got it okay, so we sort of talked about specific but maybe we can zoom out and you know What are some ways that we could be using our box based more efficiently? What are some things that make us optimistic about the future? We still have Only about I think 40% or so Segwood inputs now about 50% percent of all transactions use Segwood inputs, but the majority of inputs is still non Segwood Once more people start using Segwood or even tap root once tap root comes out The input sizes will be smaller. So naturally there will be more space for more transactions So recently a major service wall service provider and How I'm first of April nonetheless that they would be switching to native Segwood addresses and they they had been a long holdout So blockchain.com has Probably around 33% of all transactions creations among their use of this yeah, I mean that dependency is We're shaking our heads simultaneously Great Segwood activated on 24th of August in 2017 Right, that's three and a half years ago and until recently I think they they weren't even able to send to native Segwood addresses and now they announced that not only They'll actually default native Segwood addresses altogether I think they claimed this month, but I'm hoping that they'll come true with that because we have a huge backlock of all use outputs that they created over the years It has been one of the most popular bit carnwallas for yeah almost a decade And it will take forever for all of these non Segwood outputs to eventually get spent But the observation is that most Inputs are Consuming just very young outputs so funds that got moved are much more likely to move again soon so Seeing that Chanda.com will hopefully switch to native Segwood output soon I would assume that even while the U.T.s O set will have a lot of non Segwood outputs living there for a very long time The transactions that get built very well much quicker become Segwood transactions to a high degree If 33% of all transactions let's say 80% of them become Segwood inputs and Literally more than half their input sides that would be I want to say like 15% of the current blocks based demand Going away overnight. Yeah, yeah That's right. I think they calculate more more certainly, but other other holdouts Bit max recently switched to native Segwood I think for deposits there's still Quite a few services that use rap Segwood rather than native Segwood which already gets most of the efficiency but clearly not all it was actually expecting that the high fee rates might get more people moving I think that the tap root roll out might get a huge Block space efficiency gain because Tap root introduces a bunch of new features that are only available fruit Tap root and tap root outputs and inputs are about the size of pay-to-avitness public key hash in total So smaller than a lot of the multi-state constructions these days even in native Segwood and Definitely smaller than everything non Segwood so any any wallet that switched to tap root roll Bring down the blocks based use a lot quickly. Yeah, the multi-state savings are pretty significant yeah And local little bring in a new era of Multi-state being more standard. I think that'd be that's the system work setting thing it'll take quite some time because to do the Public key aggregation that will bring the biggest efficiency gain people will actually have to implement new Segwood or another aggregation algorithm and until that gets into regular wallets Will be a while. I think maybe the first it gets into libraries and and Especially for services with multi Segwood wallets There would be a huge efficiency gain there and they they should have Great incentives to roll it out very quickly Great Thanks for listening to another episode of chain code decoded and we're gonna keep it rolling we'll have another one next week Yeah, let's talk about maybe how the blockchain works go back to basics in a time\\n","iso8601Date":"2021-02-26T03:00:00+03:00"}	not queued	\N	2023-03-03 14:30:19.71+00	2023-03-08 20:40:01.499+00	2
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, "githubUsername", "authToken", permissions, "archivedAt", "createdAt", "updatedAt") FROM stdin;
1	sipa	\N	reviewer	\N	2023-03-08 13:42:08.699+00	2023-03-08 13:42:08.699+00
2	murch	\N	admin	\N	2023-03-08 20:26:19.28+00	2023-03-08 20:26:19.28+00
\.


--
-- Name: reviews_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reviews_id_seq', 4, true);


--
-- Name: transcripts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.transcripts_id_seq', 6, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 3, true);


--
-- Name: reviews reviews_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_pkey PRIMARY KEY (id);


--
-- Name: transcripts transcripts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transcripts
    ADD CONSTRAINT transcripts_pkey PRIMARY KEY (id);


--
-- Name: users users_authToken_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "users_authToken_key" UNIQUE ("authToken");


--
-- Name: users users_githubUsername_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT "users_githubUsername_key" UNIQUE ("githubUsername");


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: reviews reviews_transcriptId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT "reviews_transcriptId_fkey" FOREIGN KEY ("transcriptId") REFERENCES public.transcripts(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- Name: reviews reviews_userId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT "reviews_userId_fkey" FOREIGN KEY ("userId") REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- Name: transcripts transcripts_archivedBy_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transcripts
    ADD CONSTRAINT "transcripts_archivedBy_fkey" FOREIGN KEY ("archivedBy") REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- PostgreSQL database dump complete
--

